/* App.jsx */
import React, { useState } from 'react';
import './App.css';

function App() {
  const [weather, setWeather] = useState(null);
  const [input, setInput] = useState("");
  var [found,setFound] = useState("")

  async function handleSearch() {
    const API_KEY = "f646887b343c86e06f58ab961fdd4f04";
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${API_KEY}&units=metric`;

    try {
      const result = await fetch(url);
      const response = await result.json();
      if (response.cod === 200) {
        setWeather(response);
        setFound("")
      } else {
        setFound("city not found")
        setWeather("")
      }
    } catch (error) {
      alert("Error fetching data");
    }
  }

  return (
    <div className="weather-app">
      <h2>Weather Finder üå§Ô∏è</h2>
      <input
        value={input}
        onChange={(e) => setInput(e.target.value)}
        type="text"
        placeholder="Enter city name"
      />
      <button onClick={handleSearch}>Get Weather</button>

      {weather && (
        <div className="weather-data">
          <h1>City: {weather.name}</h1>
          <h1>Temperature: {weather.main.temp}¬∞C</h1>
          <h1>Condition: {weather.weather[0].description}</h1>
          <h1>Humidity: {weather.main.humidity}%</h1>
          <h1>Wind Speed: {weather.wind.speed} m/s</h1>
        </div>
      )}
      <h1>{found}</h1>
    </div>
  );
}

export default App;
/*        App.css */

       /* ===== Reset & Base ===== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: linear-gradient(135deg, #74ABE2, #5563DE);
  font-family: "Segoe UI", sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

/* ===== Main Container ===== */
.weather-app {
  background: #fff;
  padding: 2rem;
  border-radius: 15px;
  text-align: center;
  width: 350px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

/* ===== Heading ===== */
.weather-app h2 {
  margin-bottom: 1.5rem;
  font-size: 1.8rem;
  color: #333;
}

/* ===== Input & Button ===== */
.weather-app input {
  width: 70%;
  padding: 10px;
  border-radius: 8px;
  border: 1px solid #ddd;
  font-size: 1rem;
  outline: none;
  transition: border 0.3s;
}

.weather-app input:focus {
  border-color: #5563DE;
  box-shadow: 0 0 5px rgba(85, 99, 222, 0.5);
}

.weather-app button {
  padding: 10px 14px;
  margin-left: 10px;
  border: none;
  border-radius: 8px;
  background: #5563DE;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.3s;
}

.weather-app button:hover {
  background: #4350c6;
}

/* ===== Weather Data Card ===== */
.weather-data {
  margin-top: 1.5rem;
  background: #f9faff;
  padding: 1rem;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
}

.weather-data h1 {
  font-size: 1.1rem;
  margin: 8px 0;
  color: #444;
}

/* ===== Error Message ===== */
.weather-app h1 {
  margin-top: 10px;
  font-size: 1rem;
  color: red;
}

/* ===== Responsive ===== */
@media (max-width: 400px) {
  .weather-app {
    width: 90%;
    padding: 1.5rem;
  }

  .weather-app input {
    width: 65%;
  }
}

